"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ res.xlsx –≤ —Ç–∞–±–ª–∏—Ü—É Reserv
"""
import asyncio
import pandas as pd
from sqlalchemy import select
from db.engine import async_session_maker
from db.models import Reserv


async def load_reserv_from_excel(update_existing=False):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ res.xlsx –≤ —Ç–∞–±–ª–∏—Ü—É Reserv.
    
    Args:
        update_existing: –ï—Å–ª–∏ True, –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤–º–µ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞
    """
    
    # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
    try:
        # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        df = pd.read_excel('res.xlsx')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        if '–§–ò–û' not in df.columns and '–§–∞–∫—É–ª—å—Ç–µ—Ç' not in df.columns:
            # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –Ω–µ—Ç, —á–∏—Ç–∞–µ–º –∑–∞–Ω–æ–≤–æ –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            print("‚ö†Ô∏è –ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —á–∏—Ç–∞—é –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤...")
            df = pd.read_excel('res.xlsx', header=None, names=['–§–ò–û', '–§–∞–∫—É–ª—å—Ç–µ—Ç', 'telegram_username'])
        
        print(f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫ –∏–∑ res.xlsx")
        print(f"–ö–æ–ª–æ–Ω–∫–∏: {df.columns.tolist()}")
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª res.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ (–§–ò–û, –§–∞–∫—É–ª—å—Ç–µ—Ç, telegram_username)
    required_columns = ['–§–ò–û', '–§–∞–∫—É–ª—å—Ç–µ—Ç', 'telegram_username']
    missing_columns = [col for col in required_columns if col not in df.columns]
    
    if missing_columns:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {missing_columns}")
        print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {df.columns.tolist()}")
        return
    
    async with async_session_maker() as session:
        # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        # await session.execute(delete(Reserv))
        # await session.commit()
        
        added = 0
        skipped = 0
        errors = 0
        
        for index, row in df.iterrows():
            try:
                # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º telegram_username - –ø—Ä–∏–≤–æ–¥–∏–º –∫ lowercase –∏ —É–±–∏—Ä–∞–µ–º @
                telegram_username = row.get('telegram_username')
                if pd.notna(telegram_username):
                    telegram_username = str(telegram_username).strip().lstrip('@').lower()
                else:
                    telegram_username = None
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ª–æ–Ω–∫—É '–§–ò–û'
                full_name = row.get('–§–ò–û')
                if pd.isna(full_name):
                    print(f"‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {index + 2}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –§–ò–û, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                    skipped += 1
                    continue
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ª–æ–Ω–∫—É '–§–∞–∫—É–ª—å—Ç–µ—Ç'
                faculty = row.get('–§–∞–∫—É–ª—å—Ç–µ—Ç')
                if pd.isna(faculty):
                    faculty = None
                
                # –ö—É—Ä—Å - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ (–º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å)
                course = None  # –í res.xlsx –Ω–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ –∫—É—Ä—Å
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –∑–∞–ø–∏—Å—å –ø–æ telegram_username –ò–õ–ò –ø–æ –§–ò–û
                existing = None
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ telegram_username (–µ—Å–ª–∏ –µ—Å—Ç—å)
                if telegram_username:
                    stmt = select(Reserv).where(Reserv.telegram_username == telegram_username)
                    result = await session.execute(stmt)
                    existing = result.scalars().first()
                    
                    if existing:
                        print(f"‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {index + 2}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegram @{telegram_username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                        skipped += 1
                        continue
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –§–ò–û (–µ—Å–ª–∏ username –Ω–µ –±—ã–ª–æ –∏–ª–∏ –Ω–µ –Ω–∞—à–ª–∏)
                if not existing:
                    stmt_name = select(Reserv).where(Reserv.full_name == str(full_name).strip())
                    result_name = await session.execute(stmt_name)
                    existing = result_name.scalars().first()
                    
                    if existing:
                        if update_existing:
                            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å
                            print(f"üîÑ –°—Ç—Ä–æ–∫–∞ {index + 2}: –æ–±–Ω–æ–≤–ª—è—é —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å –¥–ª—è '{full_name}'")
                            existing.faculty = str(faculty).strip() if faculty else None
                            existing.telegram_username = telegram_username
                            existing.course = str(course).strip() if course else None
                            session.add(existing)
                            added += 1
                            continue
                        else:
                            print(f"‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {index + 2}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –§–ò–û '{full_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                            skipped += 1
                            continue
                
                # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
                reserv = Reserv(
                    full_name=str(full_name).strip(),
                    telegram_username=telegram_username,
                    faculty=str(faculty).strip() if faculty else None,
                    course=str(course).strip() if course else None,
                    message_sent=False
                )
                
                session.add(reserv)
                added += 1
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–æ–∫–∏ {index + 2}: {e}")
                errors += 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        try:
            await session.commit()
            print(f"\n‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print(f"   –î–æ–±–∞–≤–ª–µ–Ω–æ: {added}")
            print(f"   –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}")
            print(f"   –û—à–∏–±–æ–∫: {errors}")
        except Exception as e:
            await session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –ë–î: {e}")


if __name__ == '__main__':
    import sys
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    update_mode = '--update' in sys.argv or '-u' in sys.argv
    
    if update_mode:
        print("üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ res.xlsx –≤ —Ç–∞–±–ª–∏—Ü—É Reserv (—Ä–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)...")
        print("üí° –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    else:
        print("üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ res.xlsx –≤ —Ç–∞–±–ª–∏—Ü—É Reserv...")
        print("üí° –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –±—É–¥—É—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã")
        print("üí° –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python scripts/load_reserv.py --update")
    
    asyncio.run(load_reserv_from_excel(update_existing=update_mode))

